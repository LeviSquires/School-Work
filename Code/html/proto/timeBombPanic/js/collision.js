function Collision(){  s_collisionSide = "";};Collision.getCollisionSide = function(){  return s_collisionSide;}Collision.block = function(ige1, ige2){  var ige1hw = ige1.getWidth() / 2;  var ige2hw = ige2.getWidth() / 2;  var hoffset = Math.abs((ige1.getx() + ige1hw) - (ige2.getx() + ige2hw));  //console.log(ige1hw, ige2hw, hoffset);  if(hoffset >= ige1hw + ige2hw)  {    //no vertical overlap    s_collisionSide = "";    return false;  }  var ige1hh = ige1.getHeight() / 2;  var ige2hh = ige2.getHeight() / 2;  var voffset = Math.abs((ige1.gety() + ige1hh) - (ige2.gety() + ige2hh));  if(voffset >= ige1hh + ige2hh)  {    //no horizontal overlap    s_collisionSide = "";    return false;  }    var xadjust = 0;  if(ige1.getvx() > 0)  {    //Collision on the left side of ige2    s_collisionSide = "left";    xadjust = ige2.getx() - (ige1.getx() + ige1.getWidth());  }    if(ige1.getvx() < 0)  {    //Collision on the right side of ige2    s_collisionSide = "right";    xadjust = (ige2.getx() + ige2.getWidth()) - ige1.getx();  }    var yadjust = 0;    if(ige1.getvy() > 0)  {    //Collision on top    s_collisionSide = "top";    yadjust = ige2.gety() - (ige1.gety() + ige1.getHeight());  }    if(ige1.getvy() < 0)  {    //Collision on bottom    s_collisionSide = "bottom";    yadjust = (ige2.gety() + ige2.getHeight()) - ige1.gety();  }        if(xadjust && yadjust)  {    //which direction takes precendence?    if(Math.abs(xadjust) < Math.abs(yadjust))    {      yadjust = 0;    }    else    {      xadjust = 0;    }  }        if(xadjust !== 0)  {    ige1.setx(ige1.getx() + xadjust);  }      if(yadjust !== 0)  {      ige1.sety(ige1.gety() + yadjust);  }    return true;};