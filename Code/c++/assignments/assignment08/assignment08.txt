Assignment 8

Pseudo Code

Using the Date class from assignment 7 that already has a function to retrieve current time.

The days, months and years would be stored like this:
	int _years;
	int _months
	int _days;

void AddDays(int days);
{
	//adding days
	if(_months == 1, 3, 5, 7, 8, 10, 12) //months with 31 days.
	{
		int a = days /31;
		
		if(days % 31 == 0 && days > 0)
		{
			for(int i = 0; i <= a; ++i)
			{
				++_months;	
				if(_months == 4, 6, 9, 11)
				{
					if(_days > 30)
					{
						++_months;
						_days = 0;
						_days = a;
					}
					_days = _days + a;
					break;
				}
				else if(_months == 2 && isLeapYear() == true)
				{
					if(_days > 29)
					{
						++_months;
						_days = 0;
						_days = a;
					}
					_days = _days + a;
					break;
				}
				else(_months == 2 && isLeapYear() == false)
				{
					if(_days > 28)
					{
						++_months;
						_days = 0;
						_days = a;
					}
					_days = _days + a;
					break;
				}
			}
		}
		
		
		for(int i = 0; i < days; ++i)
		{
			++_days;
		}
		if(_days > 31)
		{
			++_months
			
		}
	}
	if(_months == 4, 6, 9, 11) //months with 30 days.
	if(_months == 2) //February 
}

void AddMonths(int months);
{
	int a = months / 12;
	
	//adding months
	if(months % 12 == 0 && months > 0) //checks to see if months is a multiple of 12 if so increases _years and not _months.
	{
		for(int i = 0; i <= a; --i)
		{
			++_year;	
		}
		break;
	}
	
	if(months % 12 != 0 && months > 0) //even if months is not a multiple of 12 it will still add the highest multiple of 12 to _years 
	{
		for(int i = 0; i <= a; ++i)
		{
			++_year;	
		}
		
		int b = months % 12; //takes leftover months and adds them _months.
		
		for(int i = 0; i <= b; ++i)
		{
			++_month;
		}
		if(_month > 12)
		{
			++_year;
			int temp = _month % 12;
			_month = 0;
			_month = temp;
		}
		break;
	}
	//subtracting months
	if(months % 12 == 0 && months < 0) //checks to see if months is a multiple of 12 if so decreases _years and not _months.
	{
		for(int i = 0; i >= a; --i)
		{
			--_year;	
		}
		break;
	}
	
	if(months % 12 != 0 && months < 0) //even if months is not a multiple of 12 it will still subtract the highest multiple of 12 from _years 
	{
		for(int i = 0; i >= a; --i)
		{
			--_year;	
		}
		
		int b = months % 12; //takes leftover months and subtracts them from _months.
		
		for(int i = 0; i >= b; --i)
		{
			--_month;
		}
		if(_months < 0)
		{
			--_year;
			int temp = _months % 12;
			_month = 0;
			_month = 12 + temp;
		}
		break;
	}
}

void AddYears(int years);
{
	if(years > 0)
	{
		for(int i = 0; i <= years; ++i)
		{
			++_year;
			
			if(_month == 2 && _day == 29 && years % 4 != 0)
			{
				_days = 28;
			}
			break;
		}
	}	
	if(years < 0)
	{
		for(int i = 0; i >= years; --i)
		{
			--_year;
			
			if(_month == 2 && _day == 29 && years % 4 != 0)
			{
				_day = 28;
			}
			break;
		}
	}	
}

